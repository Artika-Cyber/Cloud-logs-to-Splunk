{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicapp_name": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "connections_azureblob_externalid": {
            "type": "string"
        },
        "connections_azuremonitorlogs_externalid": {
            "type": "string"
        },
        "connections_eventhubs_externalid": {
            "type": "string"
        },
        "storage_account_name": {
            "type": "string"
        },
        "storage_container_name": {
            "type": "string"
        },
        "date_file_name": {
            "type": "string"
        },
        "filter_file_name": {
            "type": "string"
        },
        "connections_azureblob_id": {
            "type": "string"
        },
        "connections_azuremonitorlogs_id": {
            "type": "string"
        },
        "connections_eventhubs_id": {
            "type": "string"
        },
        "connections_azureblob_name": {
            "type": "string"
        },
        "connections_azuremonitorlogs_name": {
            "type": "string"
        },
        "connections_eventhubs_name": {
            "type": "string"
        },
        "la_subscription_id": {
            "type": "string"
        },
        "la_resource_group": {
            "type": "string"
        },
        "la_name": {
            "type": "string"
        },
        "base64_date_file": {
            "type": "string"
        },
        "base64_filter_file": {
            "type": "string"
        },
        "url_path_date_file": {
            "type": "string"
        },
        "url_path_date_file_post": {
            "type": "string"
        },
        "url_path_filter_file": {
            "type": "string"
        },
        "url_path_eventhub": {
            "type": "string"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicapp_name')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "interval": 1,
                                "frequency": "Minute"
                            },
                            "evaluatedRecurrence": {
                                "interval": 1,
                                "frequency": "Minute"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Get_last_fetch_date": {
                            "runAfter": {},
                            "metadata": {
                                "[parameters('base64_date_file')]": "[concat('/',parameters('storage_container_name'),'/',parameters('date_file_name'))]"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[parameters('url_path_date_file')]",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "Get_query": {
                            "runAfter": {
                                "Get_last_fetch_date": [
                                    "Succeeded"
                                ]
                            },
                            "metadata": {
                                "[parameters('base64_filter_file')]": "[concat('/',parameters('storage_container_name'),'/',parameters('filter_file_name'))]"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[parameters('url_path_filter_file')]",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "Get_logs_with_query": {
                            "runAfter": {
                                "Current_time": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "let endTime = todatetime('@{body('Get_last_fetch_date')}');\n@{body('Get_query')}",
                                "path": "/queryData",
                                "queries": {
                                    "subscriptions": "[parameters('la_subscription_id')]",
                                    "resourcegroups": "[parameters('la_resource_group')]",
                                    "resourcetype": "Log Analytics Workspace",
                                    "resourcename": "[parameters('la_name')]",
                                    "timerange": "Last 24 hours"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Get_logs_with_query')?['value']",
                            "actions": {
                                "Send_event": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['eventhubs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "ContentData": "@base64(items('For_each'))"
                                        },
                                        "path": "[parameters('url_path_eventhub')]"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_logs_with_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Current_time": {
                            "runAfter": {
                                "Get_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Expression",
                            "kind": "CurrentTime",
                            "inputs": {}
                        },
                        "Update_last_fetch_date": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "metadata": {
                                "[parameters('base64_date_file')]": "[concat('/',parameters('storage_container_name'),'/',parameters('date_file_name'))]"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "put",
                                "body": "@body('Current_time')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "path": "[parameters('url_path_date_file_post')]"
                            }
                        }   
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "id": "[parameters('connections_azureblob_id')]",
                                "connectionId": "[parameters('connections_azureblob_externalid')]",
                                "connectionName": "[parameters('connections_azureblob_name')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "azuremonitorlogs": {
                                "id": "[parameters('connections_azuremonitorlogs_id')]",
                                "connectionId": "[parameters('connections_azuremonitorlogs_externalid')]",
                                "connectionName": "[parameters('connections_azuremonitorlogs_name')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "eventhubs": {
                                "id": "[parameters('connections_eventhubs_id')]",
                                "connectionId": "[parameters('connections_eventhubs_externalid')]",
                                "connectionName": "[parameters('connections_eventhubs_name')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}